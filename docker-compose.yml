version: '3.8'

services:
  app1:
    environment:
      - CONTAINER_ID=app1  
      - APP_PORT=8080
    build: .
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: >
      sh -c "
        apk add --no-cache mysql-client redis curl &&
        ./main &&
        tail -f /dev/null
      "
    # Command explanation:
    # 1. Install required packages
    # 2. Run the main application
    # 3. Keep container alive with tail

  app2:
    environment:
      - CONTAINER_ID=app2  
      - APP_PORT=8081      
    build: .
    ports:
      - "8081:8080"
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    command: >
      sh -c "
        apk add --no-cache mysql-client redis curl &&
        ./main &&
        tail -f /dev/null
      "


  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: dist
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password      
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "app_user", "--password=app_password"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  test:
    image: alpine:latest
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["sh", "-c", "apk add --no-cache mysql-client redis && redis-cli -h redis ping && mysql -h mysql -u app_user -papp_password dist -e 'SHOW TABLES;' && tail -f /dev/null"]